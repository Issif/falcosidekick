---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: falcosidekick
automountServiceAccountToken: true
---
apiVersion: v1
kind: Service
metadata:
  name: falcosidekick
  labels:
    name: falcosidekick
spec: 
  ports:
  - port: 2801
    protocol: TCP
    targetPort: 2801
  selector:
    name: falcosidekick
  type: ClusterIP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: falcosidekick
  labels:
    name: falcosidekick
spec:
  replicas: 1
  selector:
    matchLabels:
      name: falcosidekick
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: falcosidekick
    spec:
      serviceAccount: falcosidekick
      containers:
        - name: falcosidekick
          image: issif/falcosidekick:1.0.7
          imagePullPolicy: Always
          ports:
          - containerPort: 2081
            name: svc-port
          env:
          # CREATE THE K8S SECRETS BEFORE UNCOMMENTING
          # https://kubernetes.io/docs/concepts/configuration/secret/#creating-a-secret-using-kubectl-create-secret
          # Example: kubectl create secret falcosidekick-slack-secret --from-file=./slack-secret.txt 
          # - name: SLACK_TOKEN
          #   valueFrom:
          #     secretKeyRef:
          #       name: falcosidekick-slack-secret
          #       key: slack_webhook_url
          # - name: DATADOG_TOKEN
          #   valueFrom:
          #     secretKeyRef:
          #       name: falcosidekick-datadog-secret
          #       key: datadog_api_key
          - name: SLACK_FOOTER
            value: ""
          - name: SLACK_ICON
            value: ""
          - name: DEBUG
            value: "true"
          args: [ "/falcosidekick",
                  "-e", "SLACK_TOKEN=$(SLACK_TOKEN)",
                  "-e", "DATADOG_TOKEN=$(DATADOG_TOKEN)"]
          readinessProbe:
            httpGet:
              path: "/ping"
              port: 2801
            initialDelaySeconds: 20
            periodSeconds: 3

